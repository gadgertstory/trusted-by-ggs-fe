name: ci

on:
  release:
    types:
      - created


jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - 
        name: Set env for Development
        run: |
          echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
          echo "ENVIRONMENT=Development" >> $GITHUB_ENV
          echo "PRE=DEV" >> $GITHUB_ENV
          echo "BRANCH_NAME=${{ github.event.release.target_commitish }}" >> $GITHUB_ENV
      - 
        name: Replace env IF Production
        if: github.event.release.target_commitish == 'main'
        run: |
          echo "ENVIRONMENT=Production" >> $GITHUB_ENV
          echo "PRE=PROD" >> $GITHUB_ENV
          echo "BRANCH_NAME=${{ github.event.release.target_commitish }}" >> $GITHUB_ENV
      -
        name: Show ENV
        run: |
          echo ${{ env.ENVIRONMENT }}
          echo ${{ env.PRE }}
          echo ${{ env.RELEASE_VERSION }}
          echo ${{ env.BRANCH_NAME }}
      - 
        name: multiple command
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.K8S_HOST_${PRE} }}
          username: ${{ secrets.K8S_USER_${PRE} }}
          key: ${{ secrets.PROEN_KEY }}
          port: ${{ secrets.K8S_PORT_${PRE} }}
          script: |
            whoami
            pwd
      # -
      #   name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v2
      # -
      #   name: Login to DockerHub
      #   uses: docker/login-action@v2
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}
      # -
      #   name: Build and push
      #   uses: docker/build-push-action@v3
      #   with:
      #     push: true
      #     tags: |
      #       itgadgetstory/ggs-repair-system-frontend:latest
      #       itgadgetstory/ggs-repair-system-frontend:${{ env.RELEASE_VERSION }}
