name: ci

on:
  release:
    types:
      - created


jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - 
        name: Set env for Development
        run: |
          echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
          echo "BRANCH_NAME=${{ github.event.release.target_commitish }}" >> $GITHUB_ENV
          echo "DEPLOY_KEY=${{ secrets.KEY_TEST }}" >> $GITHUB_ENV
          echo ${{ env.RELEASE_VERSION }}
          echo ${{ env.BRANCH_NAME }}
          echo ${{ env.DEPLOY_KEY}}
      - 
        name: Set env for Production
        if: github.event.release.target_commitish == 'feature/CICD-Proen'
        run: |
          echo "BRANCH_NAME=${{ github.event.release.target_commitish }}" >> $GITHUB_ENV
          echo "DEPLOY_KEY=${{ secrets.KEY_DEV_TEST }}" >> $GITHUB_ENV
          echo ${{ env.RELEASE_VERSION }}
          echo ${{ env.BRANCH_NAME }}
          echo ${{ env.DEPLOY_KEY}}
      -
        name: Get env
        if: github.event.release.target_commitish == ''
        run: |
          echo "Running on default: ${{ steps.branch-name.outputs.base_ref_branch }}"
          echo "Running on default: ${{ steps.branch-name.outputs.current_branch }}"
          echo "Running on default: ${{ steps.branch-name.outputs.default_branch }}"
          echo "Running on default: ${{ steps.branch-name.outputs.head_ref_branch }}"
          echo "Running on default: ${{ steps.branch-name.outputs.is_default }}"
          echo "Running on default: ${{ steps.branch-name.outputs.is_tag }}"
          echo "Running on default: ${{ steps.branch-name.outputs.ref_branch }}"
          echo "Running on default: ${{ steps.branch-name.outputs.tag }}"
          echo "BRANCH=${{ github.event.release.target_commitish }}" 
      # -
      #   name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v2
      # -
      #   name: Login to DockerHub
      #   uses: docker/login-action@v2
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}
      # -
      #   name: Build and push
      #   uses: docker/build-push-action@v3
      #   with:
      #     push: true
      #     tags: |
      #       itgadgetstory/ggs-repair-system-frontend:latest
      #       itgadgetstory/ggs-repair-system-frontend:${{ env.RELEASE_VERSION }}
